package bot

import (
	"alerting/internal/handlers"
	"log"
	"strconv"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

func HandleUpdates() {
	bot := InitBot()

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates, err := bot.GetUpdatesChan(u)
	if err != nil {
		log.Println(err)
	}

	for update := range updates {
		reply := "–ù–µ –∑–Ω–∞—é —á—Ç–æ —Å–∫–∞–∑–∞—Ç—å"
		if update.Message == nil {
			continue
		}
		log.Printf("[%s] %s", update.Message.From.UserName, update.Message.Text)

		switch update.Message.Command() {
		case "start":
			reply = "–ü—Ä–∏–≤–µ—Ç üëã –Ø —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç.\n" +
				"–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã:\n" +
				"/add <url> ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É\n" +
				"/list ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏\n" +
				"/clear ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫"
		case "hello":
			reply = "world"
		case "add":
			args := update.Message.CommandArguments()
			if args == "" {
				reply = "–£–∫–∞–∂–∏ URL –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: /add https://example.com"
			} else {
				reply = handlers.Add(update.Message, args)
			}
		case "list":
			handlers.InitMemory()
			urls := handlers.GetURLs(update.Message.Chat.ID)
			if len(urls) == 0 {
				reply = "–¢—ã –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª üòÖ"
			} else {
				var sb strings.Builder
				sb.WriteString("–¢–≤–æ–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ URL:\n")
				for i, u := range urls {
					sb.WriteString(
						// –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
						strings.Join([]string{strconv.Itoa(i+1) + "Ô∏è‚É£ ", u, "\n"}, ""),
					)
				}
				reply = sb.String()
			}

		case "clear":
			handlers.ClearURLs(update.Message.Chat.ID)
			reply = "–í—Å–µ —Å—Å—ã–ª–∫–∏ —É–¥–∞–ª–µ–Ω—ã üßπ"

		default:
			// –µ—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã
			if !update.Message.IsCommand() {
				reply = "–Ø –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—ã: /add, /list, /clear"
			}
		}

		msg := tgbotapi.NewMessage(update.Message.Chat.ID, reply)
		bot.Send(msg)
	}
}
